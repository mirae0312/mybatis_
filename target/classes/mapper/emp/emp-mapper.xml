<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="emp">
	<select id="selectEmpMapList" resultMap="empMap">
		SELECT
			*
		FROM
			EMP
		ORDER BY
			EMP_ID ASC
	</select>
	<!-- 
		${} : 식별자(홑따옴표 없이 전달한 값을 그대로 출력)
		#{} : 값(타엽별 형변환)
	 -->
	<select id="search1" resultMap="empMap">
		SELECT
			*
		FROM
			EMP
		WHERE
			${searchType} LIKE '%' || #{searchKeyword} || '%' 
		ORDER BY
			EMP_ID ASC
	</select>
	
	<!-- 
		if.test속성안에 and/or 대신 && || 사용불가! 
		다음 부등호는 키워드연산자로 대체해서 사용할것!
		> gt
		>= gte
		< lt
		<= lte
		
		
		where
			1. 하위의 if태그가 모두 실행되지 않는다면 where키워드 제거
			2. where다음에 바로 나오는 and/or 제거
	-->
	<select id="search2" resultMap="empMap">
		SELECT
			*
		FROM (
			SELECT
				EMP.*,
				DECODE(SUBSTR(EMP_NO, 8, 1), '1', '남', '3', '남', '여') GENDER
			FROM
				EMP
		)
		<where>
			<if test="searchType != null and searchType != ''">
				<if test="searchKeyword != null and searchKeyword != ''">
					${searchType} LIKE '%' || #{searchKeyword} || '%' 
				</if>
			</if>
			<if test="gender != null and gender != ''">
				AND GENDER = #{gender}
			</if>
			<if test="salary != null and salary != ''">
				<if test="salaryCompare != null and salaryCompare != ''">
					<choose>
						<when test="salaryCompare eq 'ge'">
							AND SALARY <![CDATA[ >= ]]> #{salary}	
						</when>
						<when test="salaryCompare eq 'le'">
							AND SALARY <![CDATA[ <= ]]> #{salary}	
						</when>
					</choose>
				</if>
			</if>
			<if test="hireDate != null and hireDate != ''">
				<if test="hiredateCompare != null and hiredateCompare != ''">
					<choose>
						<when test="hiredateCompare eq 'ge'">
							AND HIRE_DATE <![CDATA[ >= ]]> #{hireDate}
						</when>
						<when test="hiredateCompare eq 'le'">
							AND HIRE_DATE <![CDATA[ <= ]]> #{hireDate}
						</when>
					</choose>
				</if>
			</if>
		</where>
		ORDER BY
			EMP_ID ASC
	</select>
	
	<resultMap type="map" id="empMap">
		<id column="emp_id" property="empId"/>
		<result column="emp_name" property="empName"/>
		<result column="emp_no" property="empNo"/>
		<result column="gender" property="gender"/>
		<result column="email" property="email"/>
		<result column="phone" property="phone"/>
		<result column="dept_code" property="deptCode"/>
		<result column="dept_title" property="deptTitle"/>
		<result column="job_code" property="jobCode"/>
		<result column="job_name" property="jobName"/>
		<result column="sal_level" property="salLevel"/>
		<result column="salary" property="salary"/>
		<result column="bonus" property="bonus"/>
		<result column="manager_id" property="managerId"/>
		<result column="hire_date" property="hireDate"/>
		<result column="quit_yn" property="quitYn"/>
	</resultMap>
	
	<select id="selectJobList" resultType="map">
		SELECT
			JOB_CODE AS "jobCode",
			JOB_NAME AS "jobName"
		FROM
			JOB
		ORDER BY
			JOB_CODE ASC
	</select>
	
	<select id="search3" resultMap="empMap">
		SELECT
			*
		FROM (
			SELECT
				EMP.*,
				(SELECT JOB_NAME FROM JOB WHERE JOB_CODE = EMP.JOB_CODE) JOB_NAME,
				(SELECT DEPT_TITLE FROM DEPT WHERE DEPT_ID = EMP.DEPT_CODE) DEPT_TITLE,
				DECODE(SUBSTR(EMP_NO, 8, 1), '1', '남', '3', '남', '여') GENDER
			FROM
				EMP
		)
		<where>
			<if test="jobCode != null">
				JOB_CODE IN 
					<foreach collection="jobCode" item="jc" open="(" separator="," close=")">
						#{jc}
					</foreach>
				
			</if>
		</where>
	</select>
	
	<select id="selectOneEmpMap" resultMap="empMap">
		SELECT
			*
		FROM (
			SELECT
				EMP.*,
				(SELECT JOB_NAME FROM JOB WHERE JOB_CODE = EMP.JOB_CODE) JOB_NAME,
				(SELECT DEPT_TITLE FROM DEPT WHERE DEPT_ID = EMP.DEPT_CODE) DEPT_TITLE,
				DECODE(SUBSTR(EMP_NO, 8, 1), '1', '남', '3', '남', '여') GENDER
			FROM
				EMP
		)
		WHERE
			EMP_ID = #{empId}
	</select>
	
	<select id="selectDeptList" resultType="map">
		SELECT
			DEPT_ID "deptId",
			DEPT_TITLE "deptTitle"
		FROM
			DEPT
	</select>
	
	<!-- 
		set
			set태그 내부에 마지막에 위치한 ,를 제거
	 -->
	<update id="updateEmp">
		UPDATE
			EMP
		<set>
			<if test="jobCode != null and jobCode != ''">
				JOB_CODE = #{jobCode},	
			</if>
			<if test="deptCode != null and deptCode != ''">
				DEPT_CODE = #{deptCode}
			</if>
		</set>
		WHERE
			EMP_ID = #{empId}
	</update>
</mapper>